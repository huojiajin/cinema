<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="howard.cinema.core.dao.mapper.acl.UserMapper">

    <resultMap id="ResultMap" type="howard.cinema.core.dao.entity.acl.User">
        <id column="id" property="id"/>
        <result column="insert_time" property="insertTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="status" property="status"/>
        <result column="role_id" property="roleId"/>
        <result column="role_name" property="roleName"/>
        <result column="name" property="name"/>
        <result column="mobile" property="mobile"/>
        <result column="cinema_id" property="cinemaId"/>
        <result column="cinema_name" property="cinemaName"/>
        <result column="login_name" property="loginName"/>
        <result column="password" property="password"/>
    </resultMap>

    <sql id="Insert_Column">
        id,insert_time,update_time,status,role_id,role_name,name,mobile,cinema_id,cinema_name,login_name,password
    </sql>

    <select id="findAll" resultMap="ResultMap">
        select
        <include refid="Insert_Column"></include>
        from cinema_user order by update_time desc
    </select>

    <select id="findById" resultMap="ResultMap" parameterType="String">
        select
        <include refid="Insert_Column"></include>
        from cinema_user
        where id = #{id}
    </select>

    <insert id="persist" parameterType="howard.cinema.core.dao.entity.acl.User">
        insert into cinema_user (
        <include refid="Insert_Column"/>
        ) values (
        #{id},#{insertTime},#{updateTime},#{status},#{roleId},#{roleName},#{name},#{mobile},#{cinemaId},#{cinemaName},#{loginName},#{password}
        )
    </insert>

    <update id="update" parameterType="howard.cinema.core.dao.entity.acl.User">
        update cinema_user set
        <if test="roleId != null and roleId != ''">
            role_id = #{roleId},
        </if>
        <if test="roleName != null and roleName != ''">
            role_name = #{roleName},
        </if>
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        <if test="mobile != null and mobile != ''">
            mobile = #{mobile},
        </if>
        <if test="cinemaId != null and cinemaId != ''">
            cinema_id = #{cinemaId},
        </if>
        <if test="cinemaName != null and cinemaName != ''">
            cinema_name = #{cinemaName},
        </if>
        <if test="updateTime != null and updateTime != ''">
            update_time = #{updateTime}
        </if>
        where id = #{id}
    </update>

    <update id="updateStatus">
        update cinema_user set status = #{status}, update_time = #{updateTime} where id = #{id}
    </update>

    <update id="updatePassword">
        update cinema_user set password = #{password}, update_time = #{updateTime} where id = #{id}
    </update>

    <select id="listByRoleId" resultMap="ResultMap" parameterType="String">
        select
        <include refid="Insert_Column"></include>
        from cinema_user
        where role_id = #{roleId}
    </select>

    <select id="findByLoginName" resultMap="ResultMap" parameterType="String">
        select
        <include refid="Insert_Column"></include>
        from cinema_user
        where login_name = #{loginName}
    </select>
</mapper>